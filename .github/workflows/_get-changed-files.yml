name: Get Changed Files

on:
  workflow_call:
    outputs:
      changed-files:
        description: "List of changed files (space-separated) or '*' if not in a PR"
        value: ${{ jobs.get-changed-files.outputs.changed-files }}

jobs:
  get-changed-files:
    runs-on: ubuntu-latest
    outputs:
      changed-files: ${{ steps.get-files.outputs.changed-files }}

    steps:
      - name: Get changed files
        id: get-files
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Check if we're in a pull request context
          if [ "${{ github.event_name }}" = "pull_request" ] || [ "${{ github.event_name }}" = "pull_request_target" ]; then
            echo "Running in PR context"

            # Get the PR number from the github context
            PR_NUMBER="${{ github.event.number }}"

            # Check if the PR has the lint-all-files or Reverted label
            # Reverted PRs probably have a high likelihood of needing to have all files linted, so we should lint all files
            HAS_LINT_ALL_LABEL=$(gh api repos/${{ github.repository }}/pulls/$PR_NUMBER --jq '.labels[] | select(.name == "lint-all-files" or .name == "Reverted") | .name')

            if [ -n "$HAS_LINT_ALL_LABEL" ]; then
              echo "Found 'lint-all-files' or 'Reverted' label, linting all files"
              echo "changed-files=*" >> "$GITHUB_OUTPUT"
            else
              # Use gh CLI to get changed files in the PR with explicit repo
              CHANGED_FILES=$(gh api repos/${{ github.repository }}/pulls/$PR_NUMBER/files --paginate --jq '.[] | select(.status != "removed") | .filename' | tr '\n' ' ' | sed 's/ $//')

              if [ -z "$CHANGED_FILES" ]; then
                echo "No changed files found, setting to '*'"
                CHANGED_FILES="*"
              fi

              echo "Changed files: $CHANGED_FILES"
              echo "changed-files=$CHANGED_FILES" >> "$GITHUB_OUTPUT"
            fi

          else
            echo "Not in PR context, setting changed files to '*'"
            echo "changed-files=*" >> "$GITHUB_OUTPUT"
          fi
